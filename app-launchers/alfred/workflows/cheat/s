#------------------------------------------------------------------------------
#  Alfred Cheat Workflow Cheat Sheet
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Git

# Git: File is modified but not staged.
M flag

# Git: Check device for changes.
gitalizer

# Git: List Git commands.
glc  |  git

# Git: Show status of working tree.
gs  |  git status

# Git: Clone a repository.
gc <url>  |  git clone <url>

# Git: Reset all changed files in working tree to the state of last commit.
gra  |  git restore .

# Git: Reset a changed file to in working tree to the state of last commit.
grf <file>  |  git restore <file>

# Git: Show commit history.
gl  |  git log

# Git: Show all branches (local and remote).
gbsa  |  git branch -a

# Git: Show local branches.
gbsl  |  git branch

# Git: Checkout local branch.
gbcl <branch>  |  git checkout <branch>

# Git: Checkout remote branch.
gbcr <remote/branch>  |  git checkout --track <remote/branch>

# Git: Create new branch and checkout.
gbcn <branch>  |  git checkout -b <branch>

# Git: Delete local branch.
gbdl <branch>  |  git branch -D <branch>

# Git: Delete locally deleted branch on remote too.
gbdr <branch>  |  git push origin --delete <branch>

# Git: Delete branch everywhere, locally and on remote.
gbde (WIP: In Aliases)

# Git: Checkout main branch.
gbcm  |  git checkout main

# Git: Checkout develop branch.
gbcd  |  git checkout develop

# Git: Stage file(s) into index.
gisf <file(s)>  |  git add <file(s)>

# Git: Stage parts of file into index.
gisp <file>  |  git add -p <file>

# Git: Stage all changed files to index.
gisa  |  git add .

# Git: Unstage file from index.
giuf <file>  |  git restore --staged <file>

# Git: Unstage parts of file from index.
giup  |  git restore -p

# Git: Unstage all files from index.
giua  |  git restore --staged .

# Git: Create initial empty commit.
gci  |  git commit --allow-empty -m "Initial commit"

# Git: Commit changes in index with commit editor.
gcc  |  git commit

# Git: Commit changes in index with short message.
gcm <message>  |  git commit -m <message>

# Git: Create a WIP commit.
gcwip  |  git commit -m "WIP"

# Git: Change last file/commit message (before push).
gccl  |  git commit --amend

# Git:  Revert last commit (before push).
gcrl  |  git reset --soft HEAD~1

# Git: Stage all files to index and commit with short message.
gisacm <message>  |  git add . && git commit -m <message>

# Git: Stage all files to index and commit with WIP message.
gisacwip  |  git add . && git commit -m "WIP"

# Git: Stage all files to index and commit with 'Update' message.
gisacupdate  |  git add . && git commit -m "Update"

# Git: Compare files how they differ.
gdf <file>  |  git diff <file>

# Git: Fetch actual branch from actual remote.
gf  |  git fetch

# Git: Fetch actual branch from origin remote.
gfo  |  git fetch origin

# Git: Pull changes from origin/main.
gpm  |  git pull origin main

# Git: Pull changes from origin/develop.
gpd  |  git pull origin develop

# Git: Pull changes from actual branch and fetch.
gpull  |  git pull && git fetch

# Git: Pull actual branch from remote, then push it.
gpp  |  git pull && git push

# Git: Push actual branch to remote.
gpush  |  git push

# Git: Revert last push (add commit hash).
gpr <commit-hash>  |  git revert <commit-hash>

# Git: Stage all files, commit with 'WIP' and push to remote.
ggo  |  git add . && git commit -m "WIP" && git push

# Git: Stash changes.
gsc  |  git stash

# Git: Pop stashed changes.
gsp  |  git stash pop



#------------------------------------------------------------------------------
# Lazygit

# Lazygit: Start lazygit.
lg  |  lazygit

# Lazygit: Jump one pane down.
tab

# Lazygit: Jump one pane up.
shift + tab

# Lazygit: Jump to pane 1
1

# Lazygit: Jump to pane 2
2

# Lazygit: Jump to pane 3
3

# Lazygit: Jump to pane 4
4

# Lazygit: Jump to pane 5
5

# Lazygit: Jump pane tab forwards.
]

# Lazygit: Jump pane tab backwards.
[

# Lazygit: Exit lazygit.
ctrl + c

# Lazygit: Navigate pane entries down.
j  |  down

# Lazygit: Navigate pane entries up.
k  |  up

# Lazygit: Scroll up in pane.
page up

# Lazygit: Scroll down in pane.
page down

# Lazygit: Display key bindings for actual pane.
?

# Lazygit: Search in key bindings buffer and panels.
/<search-term>

# Lazygit: Close floating window.
esc

# Lazygit: Stage file (pane 2, files tab).
space

# Lazygit: Unstage file (pane 2, files tab).
space

# Lazygit: Stage all files (pane 2, files tab).
a

# Lazygit: Enter hunk stage mode (pane 2, files tab).
enter

# Lazygit: Stage line in hunk stage buffer.
space

# Lazygit: Unstage line in hunk stage buffer.
space

# Lazygit: Jump between hunk stage buffers.
tab

# Lazygit: Leave hunk stage mode.
esc

# Lazygit: Commit changes.
c

# Lazygit: Push changes.
P

# Lazygit: Checkout existing branch (pane 3).
space

# Lazygit: Create new branch (pane 3).
n

# Lazygit: Rename branch (pane 3).
R

# Lazygit: Merge a branch into actual branch (pane 3).
M

# Lazygit: View conflicts if Lazygit pop up's one.
enter

# Lazygit: Enter the merge conflict resolution tool (pane 1).
enter (on file with conflict)

# Lazygit: Navigate up in conflict resolution tool by hunks.
k  |  up

# Lazygit: Navigate down in conflict resolution tool by hunks.
j  |  down

# Lazygit: Select all hunks in conflict resolution tool.
b

# Lazygit: Select actual hunk in conflict resolution tool to resolve conflict.
space

# Lazygit: Show all commits in actual branch (pane 3).
enter

# Lazygit: Show changes of a specific commit (pane 4).
select commit (enter), select file (enter)

# Lazygit:
# Lazygit:
# Lazygit:
# Lazygit:
# Lazygit:
# Lazygit:

#------------------------------------------------------------------------------
# Yazi

# Yazi: Start Yazi file browser.
y  |  yazi

# Yazi: .
# Yazi: .
# Yazi: .
# Yazi: .
# Yazi: .
# Yazi: .
# Yazi: .
# Yazi: .
# Yazi: .

#------------------------------------------------------------------------------
# Browser

# Browser: Jump to tab 1.
hold y + 1

# Browser: Jump to tab 2.
hold y + 2

# Browser: Jump to tab 3.
hold y + 3

# Browser: Jump to tab 4.
hold y + 4

# Browser: Jump to tab 5.
hold y + 5

# Browser: Jump to tab 6.
hold y + 6

# Browser: Jump to tab 7.
hold t + 7

# Browser: Jump to tab 8.
hold t + 8

# Browser: Kill tab.
hold y|t esc

# Browser: New tab.
right launcher

# Browser: Page forward.
hold t + right thumb middle

# Browser: Page backwards.
hold y + left thumb middle

# Browser: Jump to the next tab.
hold t + right thumb top

# Browser: Jump to the previous tab.
hold y + left thumb top

# Browser: Search on webpage.
hold y + left thumb bottom  |  cmd|ctrl + f

# Browser: Jump into search-/address-bar.
hold t + right thumb bottom


#------------------------------------------------------------------------------
# bat

# bat: Reload bat config.
bat cache --build


#------------------------------------------------------------------------------
# tldr

# tldr: Show simplified man pages.
tldr <app-name>


#------------------------------------------------------------------------------
# eza

# eza: List content of directory.
l

# eza: List content of directory with less information.
ls

# eza: List content of directory in column view.
lc


#------------------------------------------------------------------------------
# thefuck

# thefuck: Correct false written executed commands.
fuck


#------------------------------------------------------------------------------
# zoxide

# zoxide: Switch into a directory already visited with zoxide.
z <directory>

# zoxide: Switch into a not already visited directory with zoxide.
z <path/to/directory>

# zoxide: Use fzf to open directory if there are directories with the same name.
z <directory> <tab>


#------------------------------------------------------------------------------
# fzf

# fzf: Exit fzf interface.
ctrl + c  |  esc

# fzf: Start fuzzy search.
f <enter>

# fzf: Show files/directories in current directory.
ctrl + t

# fzf: Show files/directories in current directory and open with nvim.
nvim <ctrl+t>

# fzf: Show/change into directories in current directory.
cd **<tab>

# fzf: Navigate up in results list.
ctrl + k

# fzf: Navigate down in results list.
ctrl + j

# fzf: Show recently used IP addresses and host names.
ssh **<tab>

# fzf: Kill a specific process.
kill -9 **<tab>

# fzf: Select more than one result (in list).
<tab>

# fzf: De-select selected items in list.
<shift+tab>

# fzf: Unset an environment variable.
unset **<tab>

# fzf: Export an environment variable.
export **<tab>

# fzf: Remove an alias.
unalias **<tab>

# fzf: Show terminal command history.
<ctrl+r>

# fzf: Show terminal command history of specific command.
your-command<ctrl+r>


#------------------------------------------------------------------------------
# SketchyBar

# SketchyBar: Reload configuration.
sketchybar --reload

# SketchyBar: Start in verbose mode.
sketchybar

# SketchyBar: Start in detached mode.
brew services start sketchybar


#------------------------------------------------------------------------------
# Window Manager

# wm: Minimize window.
hold p + `

# wm: To workspace 1.
hold p + 1

# wm: To workspace 2.
hold p + 2

# wm: To workspace 3.
hold p + 3

# wm: To workspace 4.
hold p + 4

# wm: To workspace 5.
hold p + 5

# wm: To workspace 6.
hold p + 6

# wm: To workspace 7.
hold q + 7

# wm: To workspace 8.
hold q + 8

# wm: To workspace 9.
hold q + 9

# wm: To workspace 10.
hold q + 0

# wm: Grow window.
hold q + thumb low

# wm: Shrink window.
hold p + thumb low

# wm: Swap window to the left.
hold p + left thumb middle

# wm: Swap window to the right.
hold q + right thumb middle

# wm: Swap window up.
hold q + right thumb top

# wm: Swap window down.
hold p + left thumb top

# wm: Focus left window.
hold p + h

# wm: Focus right window.
hold p + l

# wm: Focus window below.
hold p + j

# wm: Focus window above.
hold p + k

# wm: List IDs of apps.
aerospace list-apps

# wm: Jump to Nordpass.
hold p + 1  |  alt + ctrl + cmd + 1

# wm: Jump to Finder.
hold p + 2  |  alt + ctrl + cmd + 2

# wm: Jump to Mail.
hold p + 3  |  alt + ctrl + cmd + 3

# wm: Jump to Reminders.
hold p + 4  |  alt + ctrl + cmd + 4

# wm: Jump to Calendar.
hold p + 5  |  alt + ctrl + cmd + 5

# wm: Jump to Notes.
hold p + 6  |  alt + ctrl + cmd + 6

# wm: Jump to Apple Music.
hold q + m  |  alt + m

# wm: Jump to Terminal.
hold p + t  |  alt + t

# wm: Jump to Safari browser.
hold p + s  |  alt + s

# wm: Jump to Chrome browser.
hold p + c  |  alt + c

# wm: Jump to Firefox Developer Edition browser.
hold p + f  |  alt + f

# wm: Move workspace to another monitor.
hold q + right launcher  |  alt + shift + tab

# wm: Move between focused and previously focused workspace back and fourth.
hold p + left launcher  |  alt+tab


#------------------------------------------------------------------------------
#----- nvim (and partially VS-Code)

# nvim: Jump to next Todo comment.
tcn

# Jump to previous Todo comment.
tcp

# nvim: Rename word in current line.
:s/<word>/<new-word>/g

# nvim: Rename word in current file.
:%s/<word>/<new-word>/gc

# nvim: Rename word across the whole project.
:cdo s/<word>/<new-word>/gc

# nvim: Change surrounding characters.
cs<old-sign><new-sign>

# nvim: Surround word or selection with a tag.
swt

# nvim: Change surrounding tag.
cst

# nvim: Delete surrounding tag.
dst

# nvim: Delete surroundings.
ds<closing-sign>

# nvim & code: Surround word or selection with ( ).
((

# nvim & code: Surround word or selection with { }.
{{

# nvim & code: Surround word or selection with [ ].
[[

# nvim & code: Surround word or selection with " ".
""

# nvim & code: Surround word or selection with ' '.
''

# nvim & code: Surround word or selection with ` `.
``

# nvim & code: Surround word or selection with < >.
<>

# nvim: Grow buffer vertically.
<L>gv

# nvim: Shrink buffer vertically.
<L>sv

# nvim: Grow buffer horizontally.
<L>gh

# nvim: Shrink buffer horizontally.
<L>sh

# nvim: Maximize buffer horizontally.
<L>m

# nvim: Equalize width and height for all buffers.
<L>=

# nvim & code: Center actual line on screen.
zz

# nvim & code: Set actual line to bottom of the screen.
zb

# nvim & code: Set actual line to top of the screen.
zt

# nvim & code: Open terminal pane.
<L>th

# nvim: Set a mark in a file at cursor position.
m<letter>

# nvim: Jump to a mark in a file.
`<letterYou'veSet>

# nvim: Indent the whole file.
<L><L>==

#------------------------------------------------------------------------------
# VS Code

# vs code: Close terminal pane.
hold e + esc  | ctrl b + &

# vs code: Close active terminal tab.
hold e + esc  | ctrl b + & + y


#------------------------------------------------------------------------------
#----- npm

# npm: Run development environment (npm run dev).
nrd

# npm: Install packages (npm install).
ni

# npm: Install packages as dev dependencies (npm install --save-dev).
nid



#------------------------------------------------------------------------------
#----- Yarn

# yarn: Install all project packages with Yarn package manager.
yi

# yarn: Run Yarn development server.
yd

# yarn: Lint the code in the current directory.
yl

# yarn: Lint the code in the current directory and fix the issues.
ylfa

# yarn: Lint the code of a file by adding its name.
ylf

# yarn: Build the project.
yb

# yarn: Run TypeScript compiler.
ytsc

# yarn: Lint the code of a file by adding its name and fix the issues.
ylff



#------------------------------------------------------------------------------
#----- tmux (and partially VS Code)

# tmux: Start tmux.
ts

# tmux: Exit tmux.
tq (LM RP RLedge)

# tmux: Reload tmux configuration.
tsc (<p>r) (LM RI-TE)

# tmux: List tmux keys
tlk

# tmux: List all sessions (Tmux has to be started)
tls (tmux ls)

# tmux: Go back into session <session-name>
tns <session-name> (tmux attach -t <session-name>)

# tmux: Start new Tmux session with name <session-name>
tns <session-name> (tmux new -s <session-name>)

# tmux: Name session.
<p>$ (RM LT2)

# tmux: Start tmux sessionizer.
ctrl + f

# tmux: Kill window.
<p>& (RM LL)

# tmux: tmux prefix.
ctrt + b

# tmux: New window.
hold e + right launcher  |  <p>c

# tmux: Name window.
hold e + right thumb middle  |  <p>,

# tmux: Push window to the left.
ctrl shift <- (RM LT3)

# tmux: Push window to the right.
ctrl shift -> (LM RT3)

# tmux & vs code: Jump to terminal window 1.
hold i + 1  |  <p>1

# tmux & vs code: Jump to terminal window 2.
hold i + 2  |  <p>2

# tmux & vs code: Jump to terminal window 3.
hold i + 3  |  <p>3

# tmux & vs code: Jump to terminal window 4.
hold i + 4  |  <p>4

# tmux & vs code: Jump to terminal window 5.
hold i + 5  |  <p>5

# tmux & vs code: Jump to terminal window 6.
hold i + 6  |  <p>6

# tmux & vs code: Jump to terminal window 7.
hold e + 7  |  <p>7

# tmux & vs code: Jump to terminal window 8.
hold e + 8  |  <p>8

# tmux & vs code: Jump to terminal window 9.
hold e + 9  |  <p>9

# tmux: Jump to window 10.
hold e + 0  |  <p>0

# tmux: FZF fuzzy finder.
fzf (LM RT1) (RM LT1)

# tmux: Enter command mode.
<p>: (RM LI-1->)

# tmux: Start copy mode.
<p>[ (RM LI->)

# tmux: Exit copy mode.
ctrl c (LI2->)

# tmux: Choose a existing session.
<prefix> s

# tmux: Navigate session list up.
k

# tmux: Navigate session list down.
j

# tmux: Open selected session.
enter

# tmux: Kill a specific session.
<prefix> :kill-session -t <session-name>

# tmux: Open vertical pane.
<prefix> y

# tmux: Open horizontal pane.
<prefix> x

# tmux: Close pane.
exit

# tmux: Go to left pane.
<prefix> H

# tmux: Go to right pane.
<prefix> L

# tmux: Go to pane below.
<prefix> J

# tmux: Go to pane above.
<prefix> K

# tmux: Maxi/Minimize pane.
<prefix> m

# tmux: Create new window.
<prefix> c

# tmux: Quit actual window.
<prefix> q

# tmux: Go to window <number>.
<prefix> <number>

# tmux: Go to next window.
<prefix> n

# tmux: Go to previous window.
<prefix> p

# tmux: Rename actual window.
<prefix> r

# tmux: List all windows.
<prefix> w

# tmux: Swap window position.
swap-window -s <start-index> -t <target-index>

# tmux: Scroll down in copy mode.
shift j

# tmux: Scroll up in copy mode.
shift k

# tmux: Go up half a page in copy mode.
ctrl u

# tmux: Go down half a page in copy mode.
ctrl d

# tmux: Go up a full page in copy mode.
ctrl b

# tmux: Go down a full page in copy mode.
ctrl f

# tmux: Enter visual mode in copy mode.
v

# tmux: Yank in copy mode.
y

# tmux: Install plugins.
<prefix> I



#------------------------------------------------------------------------------
#----- Homebrew

# Homebrew: Install a formulae.
brew install <package>

# Homebrew: Uninstall package.
brew uninstall <package>

# Homebrew: Update Homebrew and fetch new packages.
brew update

# Homebrew: Upgrade packages to latest version.
brew upgrade

# Homebrew: Run Homebrew diagnostic for checking issues.
brew doctor

# Homebrew: List all installed packages.
brew list

# Homebrew: Show information of a package.
brew info <package>

# Homebrew: Search for a package in the Homebrew repository.
brew search <package>

# Homebrew: List outdated packages.
brew outdated

# Homebrew: Remove old versions of installed packages.
brew cleanup

# Homebrew: Commands for GUI apps and larger software.
Hombrew Casks

# Homebrew: Show homepage of an app (cask).
brew home --cask <app>

# Homebrew: Install an app (cask).
brew install --cask <app>

# Homebrew: Uninstall an app (cask).
brew uninstall --cask <app>

# Homebrew: List all installed apps (casks).
brew list --cask

# Homebrew: Show information about an app (cask).
brew info --cask <app>

# Homebrew: Upgrade apps (cask) to their latest version.
brew upgrade --cask

# Homebrew: Taps are repositories you can add (install them after adding with 'brew install').
Homebrew Taps

# Homebrew: Add a repository (tap) (install it after tapping).
brew tap <repository>

# Homebrew: Remove a repository (tap) from Homebrew.
brew untap <repository>

# Homebrew: List all added repositories (taps).
brew tap

# Homebrew: Services are background services managed by the deamon manager (launchctl on macOS, systemctl on Linux) like databases.
Homebrew Services

# Homebrew: List all installed services.
brew services list

# Homebrew: Start a service.
brew services start <service>

# Homebrew: Stop a service.
brew services stop <service>

# Homebrew: Restart a service.
brew services restart <service>

# Homebrew: Show Homebrew configuration information.
brew config

# Homebrew: Show the log of a package.
brew log <package>

# Homebrew: Show Homebrew's usage analytics settings.
brew analytics

# Homebrew: List all packages that can be installed.
brew search

# Homebrew: Check version of Homebrew.
brew -v

# Homebrew: Show help documentation.
brew help

# Homebrew: Prevent a package from being upgraded.
brew pin <package>

# Homebrew: Allow pinned package to be upgraded.
brew unpin <package>

# Homebrew: Show dependencies of a package.
brew deps <package>

# Homebrew: Install the latest development version of a package.
brew install <package> --HEAD

# Homebrew: MAS is a CLI to manage apps of macOS AppStore.
Homebrew MAS (Mac App Store)

# Homebrew: Install MAS-CLI (login to macOS AppStore before).
brew install mas

# Homebrew: Search for an AppStore application and show its ID.
mas search "<app>"

# Homebrew: Install macOS App.
mas install <id>

# Homebrew: List all installed macOS apps.
mas list

# Homebrew: Upgrade all macOS apps.
mas upgrade

# Homebrew: Upgrade a macOS app.
mas upgrade <id>

# Homebrew: Reinstall a macOS app.
mas install <id>

# Homebrew: Sign out of macOS AppStore.
mas signout

# Homebrew: Show the currently logged-in macOS AppStore account.
mas account

# Homebrew: Show outdated macOS apps.
mas outdated


#------------------------------------------------------------------------------
# Laravel

# Laravel: Start Sail Docker environment.
su  |  sail up  |  ./vendor/bin/sail up

# Laravel: Start Sail Docker environment in detached mode.
sud  |  sail up -d  |  ./vendor/bin/sail up -d

# Laravel: Stop Sail Docker environment.
sd  |  sail down  |  ./vendor/bin/sail down

# Laravel: Run Tests.
st  |  sail test  |  ./vendor/bin/sail test

# Laravel: Start Composer update.
scu  |  sail composer update  |  ./vendor/bin/sail composer update

# Laravel: Publish blueprints from vendor directory.
svp  |  sail vendor:publish --force  |  ./vendor/bin/sail vendor:publish --force

# Laravel: Migrate database fresh and seed it.
smfs  |  sail migrate:fresh --seed  |  ./vendor/bin/sail migrate:fresh --seed

# Laravel: Run Composer dump-autoload.
scds  |  sail composer dump-autoload  |  ./vendor/bin/sail composer dump-autoload

# Laravel: List Artisan commands.
salc  |  sail artisan  |  ./vendor/bin/sail artisan

# Laravel: Create a new controller file.
samctrl <name>  |  sail artisan make:controller <name>  |  ./vendor/bin/sail artisan make:controller <name>

# Laravel: Create a new view file.
samview <name>  |  sail artisan make:view <name>  |  ./vendor/bin/sail artisan make:view <name>

# Laravel: Create a new migration file.
sammigration <name>  |  sail artisan make:migration <name>  |  ./vendor/bin/sail artisan make:migration <name>

# Laravel: Create a new seeder file.
samseeder <name>  |  sail artisan make:seeder <name>  |  ./vendor/bin/sail artisan make:seeder <name>



#------------------------------------------------------------------------------
# Alfred

# Alfred: Open Alfred.
right launcher  |  cmd space

# Alfred: Show actual date and time.
now

# Alfred: Show cheat sheet.
cs <search-term>

# Alfred: Kill a specific process.
kill <process-name>

# Alfred: Set a timer.
timer <time><unit>

# Alfred: Set a timer with two time units.
timer <time1><unit1> <time2><unit2>

# Alfred: List all running timers.
timers

# Alfred: Choose audio output device.
audioout

# Alfred: Choose audio input device.
audioin

# Alfred: Convert a number.
conv <number> <unit>

# Alfred: Check network quality.
netquality

# Alfred: Load Ansible documentation.
ansible <search-term>

# Alfred: Load Bash documentation.
bash <search-term>

# Alfred: Load C++ documentation.
cpp <search-term>

# Alfred: Load Composer documentation.
composer <search-term>

# Alfred: Load CSS documentation.
css <search-term>

# Alfred: Load Docker documentation.
docker <search-term>

# Alfred: Load ESlint documentation.
eslint <search-term>

# Alfred: Load Git documentation.
git <search-term>

# Alfred: Load Homebrew documentation.
homebrew <search-term>

# Alfred: Load HTML documentation.
html <search-term>

# Alfred: Load HTTP documentation.
http <search-term>

# Alfred: Load JavaScript documentation.
js <search-term>

# Alfred: Load Jest documentation.
jest <search-term>

# Alfred: Load JQ documentation.
jq <search-term>

# Alfred: Load Laravel documentation.
laravel <search-term>

# Alfred: Load Lodash documentation.
_ <search-term>

# Alfred: Load Lua documentation.
lua <search-term>

# Alfred: Load Markdown documentation.
md <search-term>

# Alfred: Load Next.js documentation.
nextjs <search-term>

# Alfred: Load Node.js documentation.
node <search-term>

# Alfred: Load npm documentation.
npm <search-term>

# Alfred: Load PHP documentation.
php <search-term>

# Alfred: Load PHPUnit documentation.
phpunit <search-term>

# Alfred: Load Prettier documentation.
prettier <search-term>

# Alfred: Load React documentation.
react <search-term>

# Alfred: Load Sass/SCSS documentation.
scss <search-term>

# Alfred: Load Tailwind CSS documentation.
tailwindcss <search-term>

# Alfred: Load TypeScript documentation.
ts <search-term>

# Alfred: Load Vite documentation.
vite <search-term>

# Alfred: Load DOM documentation.
dom <search-term>

# Alfred: Load Yarn documentation.
yarn

# Alfred: Load clipboard history.
paste

# Alfred: Start Color Picker.
picker

# Alfred: Connect Apple AirPods Pro to device.
apc

# Alfred: Search for bluetooth devices.
btd

# Alfred: Turn on/off bluetooth.
btt

# Alfred: Track audio with Shazam.
shazam

# Alfred: Search disk with fzf.
fzf <search-term>

# Alfred: Show fzf search history.
fzf-history

# Alfred: Edit fzf search history.
fzf-edit-history

# Alfred: Search in Next.js documentation.
njs <search-term>

# Alfred: Start Lorem Ipsum generator.
lipsum <number>

# Alfred: Navigate results list up.
hold w + k  |  up

# Alfred: Navigate results list down.
hold w + j  |  down

# Alfred: Search in Apple Contacts.
dc <search-term>

# Alfred: Mute the actual microphone device.
micmute

# Alfred: Un-mute the actual microphone device.
micunmute

# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .
# Alfred: .

# Start/stop playing on Apple Music.
hold z + j  |  Alfred: mpp

# Start/stop playing actual source.
hold z + j  |  FN Key

# Increase volume.
hold z + k  |  FN Key

# Decrease volume.
hold z + ,  |  FN Key

# Next track.
hold z + l  |  FN Key

# Previous track.
hold z + .  |  FN Key

# Increase brightness.
hold z + ;  |  FN Key

# Decrease brightness.
hold z + /  |  FN Key

# Create area screenshot.
hold z + right launcher  |  cmd shift 4

# Change keyboard layout.
hold z + h  |  Globe key

# Start/stop Cursor Pro.
hold z + u

# Start/stop Presentify.
hold z + i

# Start/stop Mirror Magnet.
hold z + o

# Start/stop Keystroke Pro.
hold z + p

# Lock device.
hold z + esc  |  Alfred: lock


# Alfred: Start screen saver.
screensaver

# Alfred: Log out of system.
logout

# Alfred: Activate sleep mode.
sleep

# Alfred: Activate display sleep.
sleepdisplays

# Alfred: Lock device.
lock (LP-1 RP-RLedge)

# Alfred: Restart device.
restart

# Alfred: Shut down device.
shutdown

# Alfred: Toggle Do Not Disturb mode.
(LP-1 RI-LTedge)

# Alfred: Toggle keyboard layer indicator LEDs.
(LP-1 RI-RTedge)

# Alfred: Toggle keyboard layer RGB LEDs.
(LP-1 RP-2)

# Alfred: Switch keyboard language.
fn-key ctrl-space (LP-1 RI1<-)



#------------------------------------------------------------------------------
#----- Homerow

# Homerow: Start Homerow.
cmd+shift+space (MK1: left launcher)

